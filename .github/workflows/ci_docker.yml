jobs:
  docker:
    name: Docker build and push
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v3
    - continue-on-error: true
      name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: adopt
        java-version: 8
    - continue-on-error: true
      name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.7
    - continue-on-error: true
      name: Set up QEMU dependency
      uses: docker/setup-qemu-action@v2
    - continue-on-error: true
      id: buildx
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - continue-on-error: true
      name: Cache Maven packages
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-inlong-docker-${{ hashFiles('**/pom.xml') }}
        path: '~/.m2/repository

          !~/.m2/repository/org/apache/inlong

          '
        restore-keys: ${{ runner.os }}-inlong-docker
    - continue-on-error: true
      name: Set up swapfile path
      run: 'sudo sysctl -w vm.max_map_count=262144

        sudo sysctl -w fs.file-max=65536

        sudo fallocate -l 5G /swapfile

        sudo chmod 600 /swapfile

        sudo mkswap /swapfile

        sudo swapon /swapfile

        '
    - continue-on-error: true
      name: Remove unnecessary packages
      run: 'echo "=== Before pruning ==="

        df -h

        sudo rm -rf /usr/share/dotnet

        sudo rm -rf /usr/local/lib/android

        sudo rm -rf /opt/ghc

        echo

        echo "=== After pruning ==="

        df -h

        '
    - continue-on-error: true
      env:
        CI: false
      name: Build Docker images
      run: mvn --batch-mode --update-snapshots -e -V clean package -DskipTests -Pdocker
    - continue-on-error: true
      id: match
      if: 'success()

        && github.event_name == ''push''

        && github.repository_owner == ''apache''

        '
      name: Match branch
      run: "if [[ ${{ github.ref_name }} == ${{ github.event.repository.default_branch\
        \ }} ]]; then\n  echo \"match_master=true\" >> $GITHUB_OUTPUT\nelif [[ ${{\
        \ github.ref_name }} =~ ^branch-[0-9]+\\.[0-9]+$ ]]; then\n  echo \"match_release=true\"\
        \ >> $GITHUB_OUTPUT\nfi\n"
    - continue-on-error: true
      env:
        DOCKER_ORG: inlong
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
      if: 'steps.match.outputs.match_master == ''true''

        || steps.match.outputs.match_release == ''true''

        '
      name: Push x86 Docker images to Docker Hub
      run: 'bash +x publish-by-arch.sh --tag --publish

        '
      working-directory: docker
    - continue-on-error: true
      env:
        DOCKER_ORG: inlong
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
      if: ${{ steps.match.outputs.match_release == 'true' }}
      name: Push aarch64 Docker images to Docker Hub
      run: 'bash +x build-docker-images.sh --buildx aarch64

        bash +x publish-by-arch.sh --tag --arch aarch64 --publish

        '
      working-directory: docker
    - continue-on-error: true
      env:
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
      if: ${{ steps.match.outputs.match_release == 'true' }}
      name: Push manifest to Docker Hub
      run: 'bash +x publish-by-arch.sh --manifest

        '
      working-directory: docker
    - continue-on-error: true
      name: Clean up build packages
      run: mvn clean
name: InLong Docker Build and Push
on:
  repository_dispatch:
    types: trigger-ga___ci_docker.yml
